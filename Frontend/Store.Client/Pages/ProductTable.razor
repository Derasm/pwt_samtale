@using Store.Shared.DTO
@inject HttpClient Http

<h3>Product List</h3>

@if (products == null)
{
    <p>Loading...</p>
}
else
{
    <table>
        <thead>
        <tr>
            <th>Product Name</th>
            <th>Price</th>
            <th>Category</th>
            <th>In stock?</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in products)
        {
            <tr>
                <td>@product.ItemDescription</td>
                <td>$@product.SuggestedRetailPrice</td>
                <td>@product.ItemGroupName</td>
                <td>@GetStockStatus(product)</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<BasicVareDTO>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<BasicVareDTO>>("https://localhost:7114/api/products");
    }

    private bool GetStockStatus(BasicVareDTO product)
    {
        return product.Quantity > 0;
    }
    


}